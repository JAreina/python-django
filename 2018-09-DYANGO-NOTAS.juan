



python3.6 -m pip -V
/usr/lib/python3/dist-packages

-----------

INSTALAR PIP3 http://www.kacharreando.com/ubuntu/gestor-pip/

Si queremos instalar pip3 para python3, tendremos que utilizar los siguientes comandos:
wget https://bootstrap.pypa.io/get-pip.py
sudo python3 get-pip.py

-------------

INSTALAR ENTORNO VIRTUAL


 pip3 install pipenv --user

---------

ACTIVAR EL ENTORNO VIRTUAL

pipenv shell


INSTALAR DIANGO  

pip3 install Django==2.1.1 --user




CREAR UN NUEVO PROYECTO

$  django-admin startproject  nuevo .


   python manage.py runserver


---------------------------------------------
2 ---- hello world
--------------------------------------------

CREAR CARPETA

INSTALAR DJANGO : pipenv install django==2.1.1

pipenv shell

CREAR PROYECTO : django-admin startproject hola_mundo .


    settings.py : controlla los ajustes del proyecto
    urls.py : dice a django qué paginas se enviaran como respuesta
     wgsi.py: ayuda a django a servir paginas web
    manage.py : ejecuta varios comandos de django , como un servidor local o crear una nueva app.

 EJECUTAR LA APP : python manage.py runserver


CONTROL + C    parar la app


---------------------------
COMANDO startapp de django

_____________________________

python manage.py startapp pages



admin.py is a configuration file for the built-in Django Admin app

apps.py is a configuration file for the app itself

migrations/ keeps track of any changes to our models.py file so our
database and models.py stay in sync

models.py is where we define our database models, which Django
automatically translates into database tables

tests.py is for our app-specific tests

views.py is where we handle the request/response logic for our web app


___________________________

3 _ TEMPLATES

_____________________________

1 - CREAR DIRECTORIO
2 - INSTALAR DJANGO
3 - CREAR NUEVO PROYCTO DJANGO
4 - CREAR NUEVA APP paginas
5 - ACTUALIZAR settings.py


2 - pipenv install django==2.1.1
3 - pipenv shell 
    django-admin startproject templatess . (NO OLVIDAR EL PUNTO)
4 -  python manage.py startapp paginas 

5 - AÑADIR paginas A INSTALLED_APPS del proyecto


PROBAR QUE FUNCIONA : python manage.py runserver



PATRON DE DJANGO
******************

templates , views, urls

urls  --- controla las rutas
views --- controla la logica 
templates --- las vistas , el html


CARPETA PARA LAS templates
*************************




parar el servidor : control + c

mkdir templates
touch templates/home.html


actualizar settings.py  
en la seccion TEMPLATES 
 'DIRS': ['plantillas'],



 CONFIGUAR urls y views
 ***********************

 paginas/views.py

 templatess/urls.py  


TEST  --------------------
___________________________

ejecutar   test.py
  $  python manage.py test



_________________________
HEROKU 
_______________________


Additional Files We need to make the following four
changes to our Pages project so it’s ready to deploy online
with Heroku:

update Pipfile.lock
make a new Procfile file
install gunicorn as our web server
make aone-line change to settings.py file


___________________________

4_py_sqlite_posts

_______________________

CREAR NUEVO PROYECTO  


pipenv install django==2.1.1
pipenv shell
django-admin startproject posts_proyecto .  ( NO OLVIDAR EL PUNTO)
django-admin startapp posts_app

python manage.py runserver

actualizar settings.py para añadir la posts_app
----------


ejecutar python manage.py migrate ( crea base datos)


CREAR MODELOS


posts_app/models.py


ACTIVAR MODELOS

$ python manage.py makemigrations posts_app
$ python manage.py migrate posts_app




USAR DJANGO Admin


crear superusuario:

   $  python manage.py createsuperuser


   restart server
      python manage.py runserver

 http://127.0.0.1:8000/admin



 MOSTRAR POSTS EN LA PAGINA DE Admin

editar 
 posts_apap/admin.py


       
VIEWS - TEMPLATES - URLS 
_________________________


VIEWS 

ver contenido de la base de datos

posts_app/views.py 

usar ListView



crear las plantillas 

plantillas/home.html

actualizar TEMPLATES  'DIRS' : ['plantillas] EN settings.py

ACTUALIZAR URLS

posts_proyecto/urls.py


TEST  


python manage.py test


******************

5    BLOG


********************


pipenv install django==2.1.1&&
pipenv shell &&
django-admin startproject blog_project . &&
python manage.py startapp blog_app &&
python manage.py migrate &&
python manage.py runserver


actualizar settings.py con la app: blog_app
INSTALLED_APPS


-----------

CREAR MODELO 


blog_app/models.py


actualizar base datos

          pipenv shell
          python manage.py makemigrations blog_app
          python manage.py migrate blog_app


crear superusuario ----------------


python manage.py createsuperuser


actualizar blog_app/admin.py  



correr servidor _____________-

python manage.py runserver


http://127.0.0.1:8000/admin


añadir post en las pantallas de admin



URLS ----
crear en blog_app   archivo urls.py


 actualizar blog_project/urls.py



VIEWS ---


blog_app/views.py




TEMPLATES---


/plantillas

     base.html
     home.html

actualizar blog_project/settings.py

    TEMPLATES = 

         'DIRS' = ['plantillas']


   ARCHIVOS ESTATICOS ------------------------


   CREAR /static


   actualizar settings.py
   



USER AUTENTICACION LOGIN


http://127.0.0.1:8000/accounts/login/